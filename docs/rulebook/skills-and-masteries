<!-- v1.1 2025-08-19T09:20:02.103Z -->

<!DOCTYPE html>
<html lang="en" data-env="github" class="preload">

<head>
    <!-- Charset -->
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <title>Seeker TTRPG • Skills & Masteries</title>

    <meta name="description"
        content="Seeker is a tabletop role‑playing game set in an alternate Age of Discovery, where colonial ambition awakens forgotten entities and fractured ley‑lines. As a Seeker/Buscador—explorer, scholar, heretic—you cross an ocean into lands that observe you as intently as you chart them." />

    <meta name="author" content="Alonso de Luna" />

    <!-- Favicon (opzionale) -->
    <link rel="icon" href="/assets/icons/ico/favicon.ico" type="image/ico" />

    <!-- Open Graph per link preview -->
    <meta property="og:title" content="Seeker TTRPG" />
    <meta property="og:description"
        content="Explore a haunted New World in the Age of Discovery, where supernatural entities awaken with conquest." />
    <meta property="og:image" content="/assets/preview.png" />
    <meta property="og:url" content="https://www.seekerttrpg.com" />
    <meta property="og:type" content="website" />

    <!-- Twitter Card preview -->
    <meta name="twitter:card" content="summary_large_image" />

    <!-- IE Compatibility -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />

    <script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-firestore-compat.js"></script>

    <script src="/scripts/config.js"></script>

    <link rel="stylesheet" href="/style/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <style>
        :root {
            --bg: #0e0f12;
            --panel: #14161b;
            --ink: #e8ecf1;
            --muted: #a9b1bb;
            --accent: #f1c24c;
            --chip: #222630;
            --rule: #20242c;
            --ok: #b8f2c8;
        }

        * {
            box-sizing: border-box
        }

        body {
            margin: 0;
            background: linear-gradient(180deg, #0c0d10, #111319);
            color: var(--ink);
            font-family: ui-sans-serif, system-ui, Segoe UI, Roboto, Arial, Apple Color Emoji, Segoe UI Emoji;
            padding: 24px;
        }

        .wrap {
            max-width: 900px;
            margin-inline: auto
        }

        .skill {
            background: var(--panel);
            border: 1px solid var(--rule);
            border-radius: 16px;
            padding: 22px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, .35), inset 0 1px 0 rgba(255, 255, 255, .03);
        }

        .head {
            display: flex;
            align-items: baseline;
            gap: 12px;
            flex-wrap: wrap;
            margin-bottom: 10px;
        }

        .name {
            font-size: 1.6rem;
            font-weight: 800;
            letter-spacing: .3px;
            background: linear-gradient(90deg, #fff, var(--accent));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }

        .category {
            font-size: .9rem;
            color: var(--muted);
            padding: .25rem .6rem;
            border: 1px solid var(--rule);
            border-radius: 999px;
            background: var(--chip);
        }

        .tags {
            display: flex;
            flex-wrap: wrap;
            gap: 6px;
            margin: 8px 0 16px
        }

        .desc {
            color: var(--muted);
            margin: 4px 0 16px;
            line-height: 1.6
        }

        .grid {
            display: grid;
            gap: 14px;
            grid-template-columns: repeat(12, 1fr);
        }

        .card {
            background: #0f1116;
            border: 1px solid var(--rule);
            border-radius: 14px;
            padding: 14px 14px 12px;
        }

        .card h3 {
            margin: 0 0 8px;
            font-size: 1rem;
            letter-spacing: .3px
        }

        .muted {
            color: var(--muted)
        }

        dl.meta {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
            margin: 0
        }

        dl.meta dt {
            font-size: .75rem;
            color: var(--muted)
        }

        dl.meta dd {
            margin: 0;
            font-weight: 600
        }

        ul {
            margin: 8px 0 0 18px
        }

        .rule {
            height: 1px;
            background: linear-gradient(90deg, transparent, #2a303b, transparent);
            border: 0;
            margin: 14px 0
        }

        .slots {
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
            margin-top: 6px
        }

        .slot {
            width: 26px;
            height: 26px;
            border-radius: 6px;
            border: 1px dashed #3a4150;
            background: #121620;
        }

        .selector-wrap {
    margin-bottom: 18px;
    display: flex;
    align-items: center;
    gap: 10px;
}

.selector-wrap label {
    font-size: 0.9rem;
    color: var(--muted);
}

.skill-select {
    background: var(--chip);
    border: 1px solid var(--rule);
    border-radius: 8px;
    padding: 6px 10px;
    color: var(--ink);
    font-size: 0.95rem;
    cursor: pointer;
}

        .compat-note {
            font-size: .8rem;
            color: var(--muted);
            margin-top: 6px
        }

        .ok {
            color: var(--ok)
        }

        @media (max-width:720px) {
            .grid {
                grid-template-columns: 1fr
            }

            dl.meta {
                grid-template-columns: 1fr
            }
        }
    </style>

</head>

<body id="health-and-defense" data-menu-src="/data/menu-rulebook.json">
    <!-- SIDENAV -->
    <div id="sidenav-container"></div>
    <!-- NAVBAR -->
    <div id="navbar-top"></div>
    <script src="/scripts/navbar.js"></script>

    <!-- MAIN CONTENT ───────────────────────────────────────────── -->

    <main class="dual-column" type="rulebook">
        <div class="left-column">
            <header class="title">
                <div class="title-container page-title">
                    <span class="title-icon rot90">p</span>
                    <h1 class="expanded">Skills <span>&</span> Ma<span class="ligature-none">st</span>eries</h1>
                    <span class="title-icon">p</span>
                </div>
            </header>

<!-- SKILL ───────────────────────────────────────────── -->
<div class="wrap">
  <div class="selector-wrap">
    <label for="skillSelector">Select Skill:</label>
    <select id="skillSelector" class="skill-select"></select>
  </div>

  <div id="skillContainer"></div>
</div>

<script>
  async function loadSkills() {
    const res = await fetch('/data/skills.json');
    const data = await res.json();
    return data.skills;
  }

  function renderSkill(skill) {
    // Utility per array di slot
    const slotsArray = Array(skill.augmentations.slots).fill(0);

    return `
    <article class="skill" aria-labelledby="skill-${skill.name.replace(/\s+/g, '-').toLowerCase()}">
      <header class="head">
        <img class="icon" src="${skill.icon || '/icons/default.png'}" alt="${skill.name} icon" />
        <div class="title-wrap">
          <h1 id="skill-${skill.name.replace(/\s+/g, '-').toLowerCase()}" class="name">${skill.name}</h1>
          <span class="tag">${skill.category}</span> 
        </div>
      </header>

      <div class="tags">
        ${skill.tags.map(t => `<span class="tag">${t}</span>`).join('')}
      </div>

      <p class="desc">${skill.description}</p>

      <section class="grid">
        <!-- Base Effect -->
        <div class="card" style="grid-column: span 7;">
          <h3>Effect (base)</h3>
          <dl class="meta">
            <dt>Action Cost</dt><dd>${skill.effect.actionCost}</dd>
            <dt>Type</dt><dd>${skill.effect.type}</dd>
            <dt>Target / Range</dt><dd>${skill.effect.targetRange}</dd>
            ${skill.effect.onSuccess ? `<dt>On Success</dt><dd><strong>${skill.effect.onSuccess}</strong></dd>` : ""}
          </dl>

          ${skill.afflictions && skill.afflictions.length > 0 ? `
            <hr class="rule" />
            <h3>Afflictions</h3>
            <ul>${skill.afflictions.map(a => `<li>${a}</li>`).join('')}</ul>
          ` : ""}
        </div>

        <!-- Augmentations -->
        <div class="card" style="grid-column: span 5;">
          <h3>Augmentation Slots <span class="muted">(${skill.augmentations.slots} total)</span></h3>
          <div class="slots">
            ${slotsArray.map(() => `<span class="slot" title="Empty slot"></span>`).join('')}
          </div>
          <p class="compat-note">Compatibility is determined by matching <em>Tags</em> between Skill and Augmentations.</p>
          <hr class="rule" />
          <h3>Example Augmentations</h3>
          <ul>
            ${skill.augmentations.examples.map(ex => `<li>${ex}</li>`).join('')}
          </ul>
        </div>

        <!-- Narrative -->
        <div class="card" style="grid-column: span 12;">
          <h3>Narrative Uses</h3>
          <ul>
            ${skill.narrative.map(n => `<li>${n}</li>`).join('')}
          </ul>
        </div>
      </section>
    </article>
    `;
  }

  async function init() {
    const skills = await loadSkills();
    const selector = document.getElementById('skillSelector');
    const container = document.getElementById('skillContainer');

    // Popola il menù
    skills.forEach((s, idx) => {
      const opt = document.createElement('option');
      opt.value = idx;
      opt.textContent = s.name;
      selector.appendChild(opt);
    });

    // Render default (prima skill)
    container.innerHTML = renderSkill(skills[0]);

    // Cambio selezione
    selector.addEventListener('change', e => {
      const skill = skills[e.target.value];
      container.innerHTML = renderSkill(skill);
    });
  }

  init();
</script>

<!-- ───────────────────────────────────────────── -->



        </div>
        <div class="right-column">
            <aside class="sidebar-wrapper">
                <!-- Block 1: Quick Glossary Search -->
                <div class="sidebar-block">
                    <h3>Quick Glossary</h3>
                    <input type="text" id="glossary-search" class="glossary-input" placeholder="Search term…" />
                    <div id="glossary-result" class="glossary-result">Type a term to see its definition.</div>
                </div>

                <!-- Block 2: TL;DR -->
                <div class="sidebar-block collapsible-item-sb">
                    <div class="collapsible-header-sb" style="padding: 0">
                        <h3 class="sidebar-section">TL;DR — Title</h3>
                        <span class="collapsible-icon"></span>
                    </div>

                    <div class="collapsible-content-sb" style="padding: 0 5px">
                        <ul class="no-bullet">
                            <li class="no-bullet"><strong class="tldr-title">1 • Defense Layers</strong>
                                <div style="margin-left: 1em;">Characters in Seeker don't have a single HP pool—they use
                                    three
                                    defense layers: <img class="def-symbol-sb"
                                        src="/assets/icons/svg/health/icon-guard.svg" alt="Guard" title="Guard"> Guard,
                                    <img class="def-symbol-sb" src="/assets/icons/svg/health/icon-armor.svg" alt="Armor"
                                        title="Armor"> Armor, and <img class="def-symbol-sb"
                                        src="/assets/icons/svg/health/icon-health.svg" alt="Health" title="Health">
                                    Health.<br>
                                    <ul style="margin-top: .5em">
                                        <li class="no-bullet"><img class="def-symbol-sb"
                                                src="/assets/icons/svg/health/icon-guard.svg" alt="Guard" title="Guard">
                                            is a <strong>tactical buffer</strong> that starts at 0 and must
                                            be built up during combat.
                                            It’s lost first and doesn’t persist outside battle.</li>

                                        <li class="no-bullet"><img class="def-symbol-sb"
                                                src="/assets/icons/svg/health/icon-armor.svg" alt="Armor" title="Armor">
                                            is <strong>physical protection</strong> granted by gear.
                                            Damage that bypasses or overflows Guard hits Armor next.</li>

                                        <li class="no-bullet"><img class="def-symbol-sb"
                                                src="/assets/icons/svg/health/icon-health.svg" alt="Health"
                                                title="Health"> is your character’s <strong>core vitality</strong>.
                                            If it drops to 0, the character dies.</li>
                                    </ul>
                                </div>
                            </li>

                            <li class="no-bullet" style="margin-top: 1.5em;"><strong class="tldr-title">2 • Damage
                                    Flow</strong>
                                <div style="margin-left: 1em;">
                                    When taking damage, follow this sequence:
                                </div>
                                <div class="damage-flow-row-sb">
                                    <div class="damage-step-sb guard-step-sb">
                                        <img src="/assets/icons/svg/health/icon-guard.svg" alt="Guard" title="Guard">
                                    </div>

                                    <div class="arrow">→</div>

                                    <div class="damage-step-sb armor-step-sb">
                                        <img src="/assets/icons/svg/health/icon-armor.svg" alt="Armor" title="Armor">
                                    </div>

                                    <div class="arrow">→</div>

                                    <div class="damage-step-sb health-step-sb">
                                        <img src="/assets/icons/svg/health/icon-health.svg" alt="Health" title="Health">
                                    </div>
                                </div>
                            </li>
                            <li class="no-bullet" style="margin-top: 1.5em;">
                                <strong class="tldr-title">3 • Character Health Value</strong>
                                <ul class="no-bullet">
                                    <li style="margin: .5em 0 0 0;" class="no-bullet">
                                        <div class="equation-wrapper" style="display: flex; justify-content: center;">
                                            <p style="font-size: 1.3em">
                                                <img class="def-symbol-sb"
                                                    src="/assets/icons/svg/health/icon-health.svg" alt="Health"
                                                    title="Health"> Health = 2 ×<img class="def-symbol-sb"
                                                    src="/assets/icons/svg/aptitudes/vigor-ico.svg" alt="Vigor"
                                                    title="Vigor" style="height: 1.5em;"> Vigor
                                            </p>
                                        </div>
                                    </li>
                                </ul>
                    </div>
                </div>

                <!-- Block 3: Player & GM Resources -->
                <div class="sidebar-block">
                    <h3>Player & GM Resources</h3>
                    <a class="sidebar-link" href="#">GM Cheat Sheet</a>
                    <a class="sidebar-link" href="#">Quickstart Rules</a>
                </div>

                <!-- Block 4: From the Archives Carousel -->
                <div class="sidebar-block">
                    <h3>From the Archives</h3>
                    <div class="archives-carousel-fade">
                        <div class="archive-item show">
                            "They did not fear our steel, but the smoke that rose from southern ruins."
                            <div class="archive-author">— Letter from Inquisitor M. Varela, 1493</div>
                        </div>
                        <div class="archive-item">
                            "On the ninth night, the jungle sang back to us. Our torches would not stay lit."
                            <div class="archive-author">— Journal of Captain J. Strode</div>
                        </div>
                        <div class="archive-item">
                            "Blood on the pyramid steps opened a wound in the sky; we glimpsed something vast."
                            <div class="archive-author">— Testimony of Seeker L. de Rojas</div>
                        </div>
                        <div class="archive-item">
                            "The stone idols breathe. Some say they dream. Pray they never awaken."
                            <div class="archive-author">— Codex Margin Note, unknown author</div>
                        </div>
                    </div>
                </div>
            </aside>
        </div>
    </main>

    <!-- FOOTER -->
    <div id="footer-bottom"></div>
    <script>
        fetch("/footer.html")
            .then(res => res.text())
            .then(html => {
                document.getElementById("footer-bottom").innerHTML = html;
            });
    </script>

    <!-- SCRIPTS ────────────────────────────────────────────────── -->
    <script>
        fetch('/sidenav.html')
            .then(res => res.text())
            .then(html => {
                document.getElementById('sidenav-container').innerHTML = html;

                const script = document.createElement('script');
                script.src = '/scripts/sidenav.js';
                document.body.appendChild(script);
            });
    </script>

    <script src="/scripts/sidebar.js"></script>
    <script src="/scripts/core.js"></script>
    <script src="/scripts/version-check.js"></script>
    <script src="/scripts/iconizer.js"></script>
    <script src="/scripts/parallax.js"></script>

</body>

</html>